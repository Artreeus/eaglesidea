<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Domain Monitoring Dashboard</title>
    <style>
        /* General body styling */
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            background-color: #f4f4f9;
            color: #333;
            margin: 0;
            padding: 20px;
        }

        /* Main title styling */
        h1 {
            text-align: center;
            color: #2c3e50;
            margin-bottom: 30px;
        }

        /* Table container for better responsiveness */
        .table-container {
            overflow-x: auto;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            border-radius: 8px;
        }

        /* Table styling */
        table {
            width: 100%;
            border-collapse: collapse;
            background-color: #fff;
        }

        /* Table header styling */
        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #e0e0e0;
            white-space: nowrap;
        }

        /* Table header specific styling */
        thead {
            background-color: #34495e;
            color: white;
            font-weight: bold;
        }

        /* Alternating row colors for readability */
        tbody tr:nth-child(even) {
            background-color: #f8f9fa;
        }

        /* Hover effect for rows */
        tbody tr:hover {
            background-color: #e9ecef;
        }

        /* Status indicator styling */
        .status-active {
            color: #27ae60; /* Green */
            font-weight: bold;
        }
        .status-inactive {
            color: #c0392b; /* Red */
            font-weight: bold;
        }

        /* Loading spinner styling */
        #loader {
            text-align: center;
            padding: 20px;
            font-size: 1.2em;
            color: #555;
        }

        .hidden {
            display: none;
        }
    </style>
</head>
<body>

    <h1>Domain Monitoring Dashboard</h1>

    <div class="table-container">
        <table>
            <thead>
                <tr>
                    <th>#</th>
                    <th>Domain</th>
                    <th>First Seen</th>
                    <th>Last Seen</th>
                    <th>Age (Days)</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody id="domain-table-body">
                <!-- Domain data will be dynamically and lazily loaded here -->
            </tbody>
        </table>
    </div>
    <div id="loader">Loading more domains...</div>

    <!-- **FIX**: Data is now stored safely in a dedicated script tag -->
    <script id="domain-data" type="application/json">
        <%- JSON.stringify(domains || []) %>
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // **FIX**: Retrieve and parse the data from the dedicated script tag
            const dataElement = document.getElementById('domain-data');
            const domains = JSON.parse(dataElement.textContent);

            const tableBody = document.getElementById('domain-table-body');
            const loader = document.getElementById('loader');
            let loadedCount = 0;
            const chunkSize = 100; // Number of rows to load at a time

            // Function to render a chunk of rows
            function loadMoreRows() {
                const fragment = document.createDocumentFragment();
                const newLimit = Math.min(loadedCount + chunkSize, domains.length);

                if (loadedCount >= domains.length) {
                    loader.classList.add('hidden'); // Hide loader if all domains are loaded
                    return;
                }

                for (let i = loadedCount; i < newLimit; i++) {
                    const domain = domains[i];
                    const row = document.createElement('tr');

                    // Create Date objects for calculations and formatting
                    const firstSeen = new Date(domain.firstSeen);
                    const lastSeen = new Date(domain.lastSeen);

                    // Calculate the age of the domain in days
                    const ageInMilliseconds = new Date() - firstSeen;
                    const ageInDays = Math.floor(ageInMilliseconds / (1000 * 60 * 60 * 24));

                    // Populate the row with data
                    row.innerHTML = `
                        <td>${i + 1}</td>
                        <td>${domain.domain}</td>
                        <td>${firstSeen.toLocaleDateString()}</td>
                        <td>${lastSeen.toLocaleDateString()}</td>
                        <td>${ageInDays}</td>
                        <td class="${domain.isActive ? 'status-active' : 'status-inactive'}">
                            ${domain.isActive ? 'Active' : 'Inactive'}
                        </td>
                    `;
                    fragment.appendChild(row);
                }

                tableBody.appendChild(fragment);
                loadedCount = newLimit;

                // Hide loader if all domains have been loaded
                if (loadedCount >= domains.length) {
                    loader.classList.add('hidden');
                }
            }

            // Initial load of the first chunk of data
            if (domains.length > 0) {
                loadMoreRows();
            } else {
                // If there are no domains, hide the loader and show a message
                loader.textContent = "No domains found in the database.";
            }


            // Event listener for infinite scrolling
            window.addEventListener('scroll', () => {
                // Check if the user has scrolled to the bottom of the page
                // The offset (-500) helps trigger the load a bit before hitting the absolute bottom
                if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 500) {
                    if (loadedCount < domains.length) {
                        loadMoreRows();
                    }
                }
            });
        });
    </script>

</body>
</html>
